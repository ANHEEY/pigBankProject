<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="com.pigbank.project.dao.SooMapper">


	<!-- 대출상품 목록 -->
	<select id="showPdLoantList" resultType="com.pigbank.project.dto.LoanProductDTO">
		SELECT * FROM loan_product WHERE show='y'
	</select>
	
	<!-- 대출상품 등록 -->
	<insert id="insertPdLoan" parameterType="com.pigbank.project.dto.LoanProductDTO">
		INSERT INTO loan_product(lpdName, lsubTitle, lcontent, lgrade, lmaxPeriod, lmaxPrice, lrate,  ltype, lcxlRate)
		VALUES(#{lpdName}, #{lsubTitle}, #{lcontent}, #{lgrade}, #{lmaxPeriod}, #{lmaxPrice}, #{lrate}, #{ltype}, #{lcxlRate})
	</insert>
	
	<!-- 대출상품 상세 -->
	<select id="selectProduct" parameterType="String" resultType="com.pigbank.project.dto.LoanProductDTO">
		SELECT * FROM loan_product where lpdName=#{lpdName}
	</select>
	
	<!-- 대출상품 수정 -->
	<update id="updateProduct" parameterType="com.pigbank.project.dto.LoanProductDTO">
		UPDATE loan_product
		SET lsubTitle=#{lsubTitle}, lcontent=#{lcontent}, lgrade=#{lgrade}, lmaxPeriod=#{lmaxPeriod}, lmaxPrice=#{lmaxPrice}, lrate=#{lrate}, ltype=#{ltype}, lcxlRate=#{lcxlRate}
		WHERE lpdName=#{lpdName}
	</update>
	
	<!-- 대출상품 삭제 -->
	<update id="deleteProduct" parameterType="String">
		UPDATE loan_product
		SET show='n'
		WHERE lpdName=#{lpdName}
	</update>
	
	<!-- 대출상품 신청 -->
	<insert id="requestProduct" parameterType="com.pigbank.project.dto.LoanRequestDTO">
		INSERT INTO loan_req_tbl(lReqNum, lPdName, id, lPrincipal, lPeriod, lPurpose, lIncome, lState, lReqDate, acPwd, lReason)
		VALUES((SELECT NVL(MAX(lReqNum)+1, 1) FROM loan_req_tbl), #{lpdName}, #{id}, #{lprincipal}*10000, #{lperiod}, #{lpurpose}, #{lincome}, '승인전', sysdate, #{acPwd}, '승인전')
	</insert>
		
	<!-- 대출 심사 결좌 조회 -->
	<select id="showLoanStateList" parameterType='String' resultType="com.pigbank.project.dto.LoanRequestDTO">
		SELECT r.lReqNum, r.lPdName, r.lPrincipal, l.lRate, r.lReqDate, r.lState, r.lReason
		  FROM loan_req_tbl r, loan_product l
		 WHERE r.lPdName = l.lPdName
		   AND r.id = #{id}
	</select>
	
	<!-- 대출 심사 결좌 조회 -->
	<select id="showLoanReqList" resultType="com.pigbank.project.dto.LoanRequestDTO">
		SELECT r.lReqNum, r.lPdName, r.lperiod, r.lPrincipal, l.lRate, r.lReqDate, r.lState, r.lReason, c.name, r.id
		  FROM loan_req_tbl r, loan_product l, customer c
		 WHERE r.lPdName = l.lPdName
		   AND c.id = r.id
	</select>
	
	<!-- 대출 신청 승인 상태 업데이트 -->
	<update id="updateLoanAccept" parameterType="int">
		UPDATE loan_req_tbl
		SET lState='승인완료', lReason='승인완료'
		WHERE lReqNum=#{lreqNum}
	</update>
	
	<!-- 대출 신청 승인 상태 업데이트 -->
	<update id="updateLoanRefuse" parameterType="java.util.Map">
		UPDATE loan_req_tbl
		SET lState='승인거절', lReason=#{lreason}
		WHERE lReqNum=#{lreqNum}
	</update>
	
	<!-- 대출계좌 생성 1 -->
	<insert id="createAccount" parameterType="int">
		INSERT INTO account_tbl(acNumber, id, bankName, acState, acBalance, acType, acPwd, newDate, trsfLimit)
		SELECT 
			FLOOR(DBMS_RANDOM.VALUE(5100000000, 5109999999)),
			(SELECT id FROM loan_req_tbl WHERE lReqNum=#{lreqNum}),
			'돼지은행',
			'OPEN',
			(SELECT lPrincipal FROM loan_req_tbl WHERE lReqNum=#{lreqNum}),
			'대출계좌',
			(SELECT acPwd FROM loan_req_tbl WHERE lReqNum=#{lreqNum}),
			SYSDATE,
			10000000
			FROM DUAL
	</insert>
	
	<!-- 대출계좌 생성 2 -->
	<insert id="createLaccount" parameterType="int">
		INSERT INTO l_account_tbl(lNum, acNumber, lStartDate, lEndDate, lReqNum)
			VALUES((SELECT NVL(MAX(lNum)+1, 1) FROM l_account_tbl), 
				   (SELECT acNumber
			 		 FROM account_tbl
			 	    WHERE id = (SELECT id FROM loan_req_tbl WHERE lReqNum = #{lreqNum})
			  		  AND acType='대출계좌' 
			  		  AND newDate = (SELECT MAX(newDATE) FROM account_tbl)),
			       sysdate,
			       (SELECT ADD_MONTHS(sysdate, (SELECT lPeriod FROM loan_req_tbl WHERE lReqNum = #{lreqNum})) FROM dual),
				   #{lreqNum})
	</insert>
	
	<!--  대출 상환 스케쥴 생성 -->
	<!--  1-1. 값 가져오기 -->
	<select id="getPayInfo" parameterType="int" resultType="com.pigbank.project.dto.LoanRequestDTO">
		SELECT r.lPrincipal, 
			   p.lType, 
			   p.lRate, 
			   r.lPeriod 
		  FROM loan_req_tbl r, loan_product p
		 WHERE r.lPdName = p.lPdName
		   AND r.lReqNum = #{lreqNum}
	</select>
	<!--  1-2. 대출 상환 일정표 테이블에 insert -->
	<insert id="insertLoanPaySchedule" parameterType="com.pigbank.project.dto.LoanWillPayDTO">
		INSERT INTO l_accountPay_tbl(lWillPayNum, lPayTurn, lNum, lMonTotal, lMonPrice, lMonRate)
			VALUES((SELECT NVL(MAX(lWillPayNum)+1, 1) FROM  l_accountPay_tbl),
				  #{lpayTurn}, 
				  (SELECT MAX(lNum) FROM l_account_tbl), 
				  #{lmonTotal}, 
				  #{lmonPrice}, 
				  #{lmonRate})
	</insert>
	
	<!-- 대출 스케쥴 조회  -->
	<select id="showLoanSchedule" parameterType="int" resultType="com.pigbank.project.dto.LoanWillPayDTO">
		SELECT * FROM l_accountPay_tbl WHERE lnum=#{lnum} AND lPayStatus='상환예정' ORDER BY lPayTurn
	</select>
	
	<!-- 대출 상환 계좌 정보 조회  -->
	<select id="getLoanPayInfo" parameterType="com.pigbank.project.dto.LoanWillPayDTO" resultType="com.pigbank.project.dto.LoanWillPayDTO">
		SELECT p.*, l.acNumber 
		  FROM l_accountPay_tbl p, l_account_tbl l
		 WHERE p.lnum = l.lnum
		  AND p.lWillPayNum=#{lwillPayNum}
	</select>	
	
	<!-- 대출 스케쥴 업데이트  -->
	<update id="updateLoanPaySchedule" parameterType="com.pigbank.project.dto.LoanAccountDetailDTO">
		UPDATE l_accountPay_tbl
		   SET lPaystatus='납부완료'
		 WHERE lWillPayNum=#{lwillPayNum}
	</update>
	
	<!-- 대출 납부 거래내역 추가  -->
	<insert id="insertLoanDetail" parameterType="com.pigbank.project.dto.LoanAccountDetailDTO">
		INSERT INTO l_detail_tbl(lPaidNum, lWillPayNum, lPayDate)
		VALUES((SELECT NVL(MAX(lPaidNum)+1, 1) FROM l_detail_tbl),
				#{lwillPayNum},
				sysdate)
	</insert>
	
	<!-- 대출 계좌 잔금 업데이트  -->
	<update id="calcLoanBalance" parameterType="com.pigbank.project.dto.LoanAccountDetailDTO">
		UPDATE account_tbl
		   SET acBalance = (acBalance - #{lmonTotal})
		 WHERE acNumber = (
		        SELECT l.acNumber 
		        FROM account_tbl a, l_account_tbl l, l_accountPay_tbl p 
		        WHERE a.acNumber = l.acNumber
		        AND p.lNum = l.lNum
		        AND p.lWillPayNum = #{lwillPayNum}
		    )
	</update>
	
	<!-- 입출금 계좌 잔금 업데이트  -->
	<update id="calcDepositBalance" parameterType="com.pigbank.project.dto.LoanAccountDetailDTO">
		UPDATE account_tbl
		   SET acBalance = (acBalance - #{lmonTotal})
		 WHERE acNumber = #{acNumber}
	</update>
</mapper>